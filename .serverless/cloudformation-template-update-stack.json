{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "WebLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/brefnew-dev-web"
      }
    },
    "ArtisanLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/brefnew-dev-artisan"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "brefnew",
                  "dev",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/brefnew-dev*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/brefnew-dev*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:*"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "${Storage.Arn}"
                    },
                    {
                      "Fn::Sub": "${Storage.Arn}/*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:PutItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "Cache",
                        "Arn"
                      ]
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "sqs:SendMessage"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "Queue",
                        "Arn"
                      ]
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "brefnew",
              "dev",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "WebLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/brefnew/dev/1615732036957-2021-03-14T14:27:16.957Z/brefnew.zip"
        },
        "Handler": "public/index.php",
        "Runtime": "provided.al2",
        "FunctionName": "brefnew-dev-web",
        "MemorySize": 1024,
        "Timeout": 28,
        "Environment": {
          "Variables": {
            "BREF_BINARY_RESPONSES": "1",
            "ASSET_URL": {
              "Fn::Join": [
                "",
                [
                  "https://d2upeuydbq2hwb.cloudfront.net"
                ]
              ]
            },
            "MIX_ASSET_URL": "https://brefnew.s3.amazonaws.com",
            "AWS_BUCKET": {
              "Ref": "Storage"
            },
            "CACHE_DRIVER": "file",
            "DYNAMODB_CACHE_TABLE": {
              "Ref": "Cache"
            },
            "LOG_CHANNEL": "stderr",
            "QUEUE_CONNECTION": "sync",
            "SESSION_DRIVER": "file",
            "SESSION_STORE": "dynamodb",
            "SQS_QUEUE": {
              "Ref": "Queue"
            },
            "SQS_PREFIX": "https://sqs.ap-south-1.amazonaws.com/940779068650",
            "VIEW_COMPILED_PATH": "/tmp/storage/framework/views",
            "APP_NAME": "brefnew",
            "APP_ENV": "production",
            "APP_KEY": "base64:8iBxTR+DeORGw67bf30DsrVMq8ss1yaMnW7x6yur53A=",
            "APP_DEBUG": "true",
            "APP_URL": "http://localhost",
            "DB_CONNECTION": "mysql",
            "DB_HOST": "database-1.cgsvc8pps8d6.ap-south-1.rds.amazonaws.com",
            "DB_PORT": "3306",
            "DB_DATABASE": "gplm",
            "DB_USERNAME": "admin",
            "DB_PASSWORD": "MuKu_10322305",
            "BROADCAST_DRIVER": "log",
            "SESSION_LIFETIME": "120",
            "REDIS_HOST": "127.0.0.1",
            "REDIS_PASSWORD": "null",
            "REDIS_PORT": "6379",
            "MAIL_MAILER": "smtp",
            "MAIL_HOST": "email-smtp.ap-south-1.amazonaws.com",
            "MAIL_PORT": "587",
            "MAIL_USERNAME": "AKIA5WCWNLTVNUU2VZ7L",
            "MAIL_PASSWORD": "BC/PINElslMETzRhegdDQtRvzC/PnX2yxhHcxNxrV2cX",
            "MAIL_ENCRYPTION": "tls",
            "MAIL_FROM_ADDRESS": "bali4u2001@gmail.com",
            "MAIL_FROM_NAME": "brefnew",
            "FILESYSTEM_DRIVER": "s3",
            "FILESYSTEM_DRIVER_PUBLIC": "s3",
            "PUSHER_APP_ID": "",
            "PUSHER_APP_KEY": "",
            "PUSHER_APP_SECRET": "",
            "PUSHER_APP_CLUSTER": "mt1",
            "MIX_PUSHER_APP_KEY": "",
            "MIX_PUSHER_APP_CLUSTER": "mt1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:209497400698:layer:php-74-fpm:18"
        ]
      },
      "DependsOn": [
        "WebLogGroup"
      ]
    },
    "ArtisanLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/brefnew/dev/1615732036957-2021-03-14T14:27:16.957Z/brefnew.zip"
        },
        "Handler": "artisan",
        "Runtime": "provided.al2",
        "FunctionName": "brefnew-dev-artisan",
        "MemorySize": 1024,
        "Timeout": 120,
        "Description": "Artisan console",
        "Environment": {
          "Variables": {
            "BREF_BINARY_RESPONSES": "1",
            "ASSET_URL": {
              "Fn::Join": [
                "",
                [
                  "https://d2upeuydbq2hwb.cloudfront.net"
                ]
              ]
            },
            "MIX_ASSET_URL": "https://brefnew.s3.amazonaws.com",
            "AWS_BUCKET": {
              "Ref": "Storage"
            },
            "CACHE_DRIVER": "file",
            "DYNAMODB_CACHE_TABLE": {
              "Ref": "Cache"
            },
            "LOG_CHANNEL": "stderr",
            "QUEUE_CONNECTION": "sync",
            "SESSION_DRIVER": "file",
            "SESSION_STORE": "dynamodb",
            "SQS_QUEUE": {
              "Ref": "Queue"
            },
            "SQS_PREFIX": "https://sqs.ap-south-1.amazonaws.com/940779068650",
            "VIEW_COMPILED_PATH": "/tmp/storage/framework/views",
            "APP_NAME": "brefnew",
            "APP_ENV": "production",
            "APP_KEY": "base64:8iBxTR+DeORGw67bf30DsrVMq8ss1yaMnW7x6yur53A=",
            "APP_DEBUG": "true",
            "APP_URL": "http://localhost",
            "DB_CONNECTION": "mysql",
            "DB_HOST": "database-1.cgsvc8pps8d6.ap-south-1.rds.amazonaws.com",
            "DB_PORT": "3306",
            "DB_DATABASE": "gplm",
            "DB_USERNAME": "admin",
            "DB_PASSWORD": "MuKu_10322305",
            "BROADCAST_DRIVER": "log",
            "SESSION_LIFETIME": "120",
            "REDIS_HOST": "127.0.0.1",
            "REDIS_PASSWORD": "null",
            "REDIS_PORT": "6379",
            "MAIL_MAILER": "smtp",
            "MAIL_HOST": "email-smtp.ap-south-1.amazonaws.com",
            "MAIL_PORT": "587",
            "MAIL_USERNAME": "AKIA5WCWNLTVNUU2VZ7L",
            "MAIL_PASSWORD": "BC/PINElslMETzRhegdDQtRvzC/PnX2yxhHcxNxrV2cX",
            "MAIL_ENCRYPTION": "tls",
            "MAIL_FROM_ADDRESS": "bali4u2001@gmail.com",
            "MAIL_FROM_NAME": "brefnew",
            "FILESYSTEM_DRIVER": "s3",
            "FILESYSTEM_DRIVER_PUBLIC": "s3",
            "PUSHER_APP_ID": "",
            "PUSHER_APP_KEY": "",
            "PUSHER_APP_SECRET": "",
            "PUSHER_APP_CLUSTER": "mt1",
            "MIX_PUSHER_APP_KEY": "",
            "MIX_PUSHER_APP_CLUSTER": "mt1"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        },
        "Layers": [
          "arn:aws:lambda:us-east-1:209497400698:layer:php-74:18",
          "arn:aws:lambda:us-east-1:209497400698:layer:console:32"
        ]
      },
      "DependsOn": [
        "ArtisanLogGroup"
      ]
    },
    "WebLambdaVersion7jZ6C1ChSXF3BbtruMZNqDARmiXEfnhIsOuZYRHiW64": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "WebLambdaFunction"
        },
        "CodeSha256": "rCdzzuO37wReNAdv3FF65aaUiB8eAq7GL+kMyq4S9Z8="
      }
    },
    "ArtisanLambdaVersionll7yxLIHyunpbKpwxxDgdcBsQGHcX7XBm0pat76g2Gw": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ArtisanLambdaFunction"
        },
        "CodeSha256": "rCdzzuO37wReNAdv3FF65aaUiB8eAq7GL+kMyq4S9Z8=",
        "Description": "Artisan console"
      }
    },
    "ApiGatewayRestApi": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "brefnew-dev",
        "BinaryMediaTypes": [
          "*/*"
        ],
        "EndpointConfiguration": {
          "Types": [
            "EDGE"
          ]
        },
        "Policy": ""
      }
    },
    "ApiGatewayResourceProxyVar": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        }
      }
    },
    "ApiGatewayMethodAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Fn::GetAtt": [
            "ApiGatewayRestApi",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WebLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayMethodProxyVarAny": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "RequestParameters": {},
        "ResourceId": {
          "Ref": "ApiGatewayResourceProxyVar"
        },
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "WebLambdaFunction",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": []
      }
    },
    "ApiGatewayDeployment1615732022803": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGatewayRestApi"
        },
        "StageName": "dev"
      },
      "DependsOn": [
        "ApiGatewayMethodAny",
        "ApiGatewayMethodProxyVarAny"
      ]
    },
    "WebLambdaPermissionApiGateway": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "WebLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ApiGatewayRestApi"
              },
              "/*/*"
            ]
          ]
        }
      }
    },
    "Cache": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "BillingMode": "PAY_PER_REQUEST",
        "AttributeDefinitions": [
          {
            "AttributeName": "key",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "key",
            "KeyType": "HASH"
          }
        ]
      }
    },
    "Queue": {
      "Type": "AWS::SQS::Queue",
      "Properties": {
        "ReceiveMessageWaitTimeSeconds": 20,
        "VisibilityTimeout": 120
      }
    },
    "Storage": {
      "Type": "AWS::S3::Bucket"
    },
    "Assets": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "*"
              ],
              "AllowedMethods": [
                "GET"
              ],
              "AllowedOrigins": [
                "*"
              ]
            }
          ]
        }
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      }
    },
    "WebLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "WebLambdaVersion7jZ6C1ChSXF3BbtruMZNqDARmiXEfnhIsOuZYRHiW64"
      }
    },
    "ArtisanLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ArtisanLambdaVersionll7yxLIHyunpbKpwxxDgdcBsQGHcX7XBm0pat76g2Gw"
      }
    },
    "ServiceEndpoint": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ApiGatewayRestApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/dev"
          ]
        ]
      }
    }
  }
}